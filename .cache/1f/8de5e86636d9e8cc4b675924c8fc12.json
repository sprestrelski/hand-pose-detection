{"id":"bjOA","dependencies":[{"name":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\package.json","includedInParent":true,"mtime":1681608596899},{"name":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\.babelrc","includedInParent":true,"mtime":1681607266813},{"name":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1681608478311},{"name":"../engine","loc":{"line":17,"column":23},"parent":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\ragged_tensor_to_tensor.js","resolved":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\engine.js"},{"name":"../kernel_names","loc":{"line":18,"column":37},"parent":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\ragged_tensor_to_tensor.js","resolved":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernel_names.js"},{"name":"../tensor_util_env","loc":{"line":19,"column":32},"parent":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\ragged_tensor_to_tensor.js","resolved":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\tensor_util_env.js"},{"name":"./operation","loc":{"line":20,"column":19},"parent":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\ragged_tensor_to_tensor.js","resolved":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\operation.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.raggedTensorToTensor=void 0;var e=require(\"../engine\"),r=require(\"../kernel_names\"),o=require(\"../tensor_util_env\"),n=require(\"./operation\");function s(n,s,T,t,a){const g=(0,o.convertToTensor)(n,\"shape\",\"raggedTensorToTensor\",\"int32\"),i=(0,o.convertToTensor)(s,\"values\",\"raggedTensorToTensor\"),u={shape:g,values:i,defaultValue:(0,o.convertToTensor)(T,\"defaultValue\",\"raggedTensorToTensor\",i.dtype),rowPartitionTensors:t.map((e,r)=>(0,o.convertToTensor)(e,`tensors${r}`,\"raggedTensorToTensor\",\"int32\"))},d={rowPartitionTypes:a};return e.ENGINE.runKernel(r.RaggedTensorToTensor,u,d)}const T=(0,n.op)({raggedTensorToTensor_:s});exports.raggedTensorToTensor=T;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":7},"generated":{"line":1,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":7},"generated":{"line":1,"column":13}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":7},"generated":{"line":1,"column":20}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":7},"generated":{"line":1,"column":35}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":7},"generated":{"line":1,"column":43}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":7},"generated":{"line":1,"column":56}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":7},"generated":{"line":1,"column":57}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":7},"generated":{"line":1,"column":64}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":7},"generated":{"line":1,"column":68}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":7},"generated":{"line":1,"column":76}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":7},"generated":{"line":1,"column":102}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":104}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":108}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":110}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":118}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":131}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":133}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":141}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":160}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":162}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":170}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":192}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":194}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":202}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":78,"column":0},"generated":{"line":1,"column":217}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":78,"column":9},"generated":{"line":1,"column":226}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":79,"column":4},"generated":{"line":1,"column":228}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":79,"column":30},"generated":{"line":1,"column":230}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":80,"column":4},"generated":{"line":1,"column":232}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":80,"column":37},"generated":{"line":1,"column":234}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":81,"column":4},"generated":{"line":1,"column":236}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":82,"column":8},"generated":{"line":1,"column":239}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":82,"column":8},"generated":{"line":1,"column":245}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":83,"column":6},"generated":{"line":1,"column":248}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":83,"column":22},"generated":{"line":1,"column":250}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":83,"column":22},"generated":{"line":1,"column":252}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":83,"column":22},"generated":{"line":1,"column":269}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":83,"column":29},"generated":{"line":1,"column":271}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":83,"column":38},"generated":{"line":1,"column":279}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":83,"column":62},"generated":{"line":1,"column":302}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":84,"column":8},"generated":{"line":1,"column":311}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":84,"column":18},"generated":{"line":1,"column":314}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":84,"column":34},"generated":{"line":1,"column":316}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":84,"column":34},"generated":{"line":1,"column":318}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":84,"column":34},"generated":{"line":1,"column":335}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":84,"column":42},"generated":{"line":1,"column":337}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":84,"column":52},"generated":{"line":1,"column":346}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":91,"column":8},"generated":{"line":1,"column":370}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":91,"column":45},"generated":{"line":1,"column":372}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":92,"column":4},"generated":{"line":1,"column":373}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":92,"column":11},"generated":{"line":1,"column":379}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":93,"column":4},"generated":{"line":1,"column":381}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":93,"column":12},"generated":{"line":1,"column":388}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":94,"column":4},"generated":{"line":1,"column":390}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":85,"column":24},"generated":{"line":1,"column":404}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":86,"column":6},"generated":{"line":1,"column":406}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":86,"column":6},"generated":{"line":1,"column":408}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":86,"column":6},"generated":{"line":1,"column":425}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":86,"column":20},"generated":{"line":1,"column":427}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":86,"column":36},"generated":{"line":1,"column":442}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":86,"column":60},"generated":{"line":1,"column":465}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":86,"column":68},"generated":{"line":1,"column":467}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":95,"column":4},"generated":{"line":1,"column":474}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":87,"column":31},"generated":{"line":1,"column":494}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":87,"column":51},"generated":{"line":1,"column":496}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":88,"column":6},"generated":{"line":1,"column":500}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":88,"column":7},"generated":{"line":1,"column":501}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":88,"column":10},"generated":{"line":1,"column":503}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":89,"column":10},"generated":{"line":1,"column":508}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":89,"column":26},"generated":{"line":1,"column":510}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":89,"column":26},"generated":{"line":1,"column":512}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":89,"column":26},"generated":{"line":1,"column":529}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":89,"column":39},"generated":{"line":1,"column":541}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":89,"column":44},"generated":{"line":1,"column":545}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":89,"column":68},"generated":{"line":1,"column":568}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":97,"column":8},"generated":{"line":1,"column":579}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":97,"column":43},"generated":{"line":1,"column":581}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":97,"column":44},"generated":{"line":1,"column":582}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":97,"column":44},"generated":{"line":1,"column":600}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":99,"column":9},"generated":{"line":1,"column":603}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":99,"column":9},"generated":{"line":1,"column":610}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":99,"column":16},"generated":{"line":1,"column":612}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":99,"column":16},"generated":{"line":1,"column":619}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":99,"column":26},"generated":{"line":1,"column":629}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":99,"column":9},"generated":{"line":1,"column":631}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":99,"column":48},"generated":{"line":1,"column":652}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":99,"column":62},"generated":{"line":1,"column":654}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":7},"generated":{"line":1,"column":657}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":13},"generated":{"line":1,"column":663}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":52},"generated":{"line":1,"column":666}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":55},"generated":{"line":1,"column":668}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":55},"generated":{"line":1,"column":670}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":55},"generated":{"line":1,"column":674}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":56},"generated":{"line":1,"column":675}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":56},"generated":{"line":1,"column":697}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":7},"generated":{"line":1,"column":701}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":7},"generated":{"line":1,"column":709}},{"source":"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts","name":null,"original":{"line":102,"column":7},"generated":{"line":1,"column":730}}],"sources":{"../../../../../../tfjs-core/src/ops/ragged_tensor_to_tensor.ts":"/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {RaggedTensorToTensor, RaggedTensorToTensorAttrs, RaggedTensorToTensorInputs} from '../kernel_names';\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {op} from './operation';\n\n/**\n * Create a dense tensor from a ragged tensor, possibly altering its shape.\n *\n * The raggedTensorToTensor op creates a dense tensor from am array of row\n * partition tensors, a value vector, and default values. If the shape is\n * unspecified, the minimal shape required to contain all the elements in the\n * ragged tensor (the natural shape) will be used. If some dimensions are left\n * unspecified, then the size of the natural shape is used in that dimension.\n *\n * The defaultValue will be broadcast to the output shape. After that, the\n * values from the ragged tensor overwrite the default values. Note that the\n * defaultValue must have less dimensions than the value.\n *\n * The row partition tensors are in the order of the dimensions. At present, the\n * types can be: \"ROW_SPLITS\": the row_splits tensor from the ragged tensor.\n *   \"VALUE_ROWIDS\": the value_rowids tensor from the ragged tensor.\n *   \"FIRST_DIM_SIZE\": if value_rowids is used for the first dimension, then it\n * is preceded by \"FIRST_DIM_SIZE\".\n * ```\n * @param shape: A Tensor. Must be one of the following types: 'int32'. The\n *     desired shape of the output tensor. If left unspecified (empty), the\n *     minimal shape required to contain all the elements in the ragged tensor\n *     (the natural shape) will be used. If some dimensions are left\n *     unspecified, then the size of the natural shape is used in that\n *     dimension.\n *\n *     Note that dense dimensions cannot be modified by the shape argument.\n *     Trying to change the size of a dense dimension will cause the op to fail.\n *     Examples: natural shape: [4, 5, 6] shape: -1 output shape: [4, 5, 6]\n *\n *     natural shape: [4, 5, 6] shape: [3, -1, 2] output shape: [3, 5, 2]\n *\n *     natural shape: [4, 5, 6] shape: [3, 7, 2] output shape: [3, 7, 2]\n * @param values: A Tensor. A 1D tensor representing the values of the ragged\n *     tensor.\n * @param defaultValue: A Tensor. Must have the same type as values. The\n *     defaultValue when the shape is larger than the ragged tensor. The\n *     defaultValue is broadcast until it is the shape of the output tensor,\n *     and then overwritten by values in the ragged tensor. The default value\n *     must be compatible with this broadcast operation, and must have fewer\n *     dimensions than the value tensor.\n * @param rowPartitionTensors: A list of at least 1 Tensor objects with the same\n *     type in: 'int32'.\n * @param rowPartitionTypes: A list of strings. The types of the row partition\n *     tensors. At present, these can be:\n *     \"ROW_SPLITS\": the row_splits tensor from the ragged tensor.\n *     \"VALUE_ROWIDS\": the value_rowids tensor from the ragged tensor.\n *     \"FIRST_DIM_SIZE\": if value_rowids is used for the first dimension, then\n *         it is preceeded by \"FIRST_DIM_SIZE\". The tensors are in the order of\n *         the dimensions.\n * @return A Tensor. Has the same type as values.\n * @doc {heading: 'Operations', subheading: 'Ragged'}\n */\nfunction raggedTensorToTensor_(\n    shape: Tensor|TensorLike, values: Tensor|TensorLike,\n    defaultValue: Tensor|TensorLike, rowPartitionTensors: Tensor[],\n    rowPartitionTypes: string[]): Tensor {\n  const $shape =\n      convertToTensor(shape, 'shape', 'raggedTensorToTensor', 'int32');\n  const $values = convertToTensor(values, 'values', 'raggedTensorToTensor');\n  const $defaultValue = convertToTensor(\n      defaultValue, 'defaultValue', 'raggedTensorToTensor', $values.dtype);\n  const $rowPartitionTensors = rowPartitionTensors.map(\n      (t, i) =>\n          convertToTensor(t, `tensors${i}`, 'raggedTensorToTensor', 'int32'));\n\n  const inputs: RaggedTensorToTensorInputs = {\n    shape: $shape,\n    values: $values,\n    defaultValue: $defaultValue,\n    rowPartitionTensors: $rowPartitionTensors\n  };\n  const attrs: RaggedTensorToTensorAttrs = {rowPartitionTypes};\n\n  return ENGINE.runKernel(RaggedTensorToTensor, inputs as {}, attrs as {});\n}\n\nexport const raggedTensorToTensor = /* @__PURE__ */ op({raggedTensorToTensor_});\n"},"lineCount":null}},"error":null,"hash":"154ec32a2046d8e699ae41a09bff1020","cacheData":{"env":{}}}