{"id":"DAMt","dependencies":[{"name":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\package.json","includedInParent":true,"mtime":1681608596899},{"name":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\.babelrc","includedInParent":true,"mtime":1681607266813},{"name":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-backend-webgl\\package.json","includedInParent":true,"mtime":1681608531672}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Pool3DProgram=exports.Pool2DProgram=void 0;class n{constructor(n,e,t,i=!1,a=!1){if(this.variableNames=[\"x\"],\"avg\"===e&&t)throw new Error(\"Cannot compute positions for average pool.\");const o=n.filterWidth,x=n.strideHeight,r=n.strideWidth,c=n.dilationHeight,l=n.dilationWidth,u=n.effectiveFilterHeight,s=n.effectiveFilterWidth,C=n.padInfo.top,d=n.padInfo.left;this.outputShape=n.outShape;const $=\"avg\"===e,h=`((batch  * ${n.inHeight} + xR) * ${n.inWidth} + xC) * ${n.inChannels} + d`,v=`(xR * ${n.inWidth} + xC) * ${n.inChannels} + d`;let f=\"0.0\";if($||(f=\"-1.0 / 1e-20\"),t){const e=\">=\";return void(this.userCode=`\\n        const ivec2 strides = ivec2(${x}, ${r});\\n        const ivec2 pads = ivec2(${C}, ${d});\\n\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int batch = coords[0];\\n          int d = coords[3];\\n\\n          ivec2 xRCCorner = coords.yz * strides - pads;\\n          int xRCorner = xRCCorner.x;\\n          int xCCorner = xRCCorner.y;\\n\\n          // max/min x(?, ?, d) to get y(yR, yC, d).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n          float avgValue = 0.0;\\n\\n          for (int wR = 0; wR < ${u};\\n              wR += ${c}) {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= ${n.inHeight}) {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < ${s};\\n                wC += ${l}) {\\n              int xC = xCCorner + wC;\\n\\n              if (xC < 0 || xC >= ${n.inWidth}) {\\n                continue;\\n              }\\n\\n              float value = getX(batch, xR, xC, d);\\n\\n              // If a min / max value has already been found, use it. If not,\\n              // use the current value.\\n              float currMinMaxValue = mix(\\n                  value, minMaxValue, minMaxValueFound);\\n              if (value ${e} currMinMaxValue) {\\n                minMaxValue = value;\\n                minMaxValueFound = 1.0;\\n                minMaxPosition = ${i?a?h:v:`wR * ${s} + wC`};\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      `)}let R=`${e}(${e}(${e}(`+\"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])\";\"avg\"===e&&(R=\"avgValue / max(count, 1.0)\");const V=4*Math.floor(o/4),g=o%4,m=`\\n      if (${$}) {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = max(values, minMaxValue);\\n      }\\n    `;this.userCode=`\\n      const ivec2 strides = ivec2(${x}, ${r});\\n      const ivec2 pads = ivec2(${C}, ${d});\\n      const float initializationValue = ${f};\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float count = 0.0;\\n\\n      float getValue(int batch, int xR, int xC, int d) {\\n        if (xC < 0 || xC >= ${n.inWidth}) {\\n          return initializationValue;\\n        }\\n        count += 1.0;\\n        return getX(batch, xR, xC, d);\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // max/min x(?, ?, d) to get y(yR, yC, d).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(${f});\\n        float avgValue = 0.0;\\n        count = 0.0;\\n\\n        for (int wR = 0; wR < ${u};\\n            wR += ${c}) {\\n          int xR = xRCorner + wR;\\n\\n          if (xR < 0 || xR >= ${n.inHeight}) {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < ${V}; wC += 4) {\\n            int xC = xCCorner + wC * ${l};\\n\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + ${l}, d),\\n              getValue(batch, xR, xC + 2 * ${l}, d),\\n              getValue(batch, xR, xC + 3 * ${l}, d)\\n            );\\n\\n            ${m}\\n          }\\n\\n          int xC = xCCorner + ${V};\\n          if (${1===g}) {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              initializationValue,\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            ${m}\\n          } else if (${2===g}) {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + ${l}, d),\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            ${m}\\n          } else if (${3===g}) {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + ${l}, d),\\n              getValue(batch, xR, xC + 2 * ${l}, d),\\n              initializationValue\\n            );\\n\\n            ${m}\\n          }\\n        }\\n        setOutput(${R});\\n      }\\n    `}}exports.Pool2DProgram=n;class e{constructor(n,e,t,i=!1,a=!1){if(this.variableNames=[\"x\"],\"avg\"===e&&t)throw new Error(\"Cannot compute positions for average pool.\");const o=n.filterWidth,x=n.strideDepth,r=n.strideHeight,c=n.strideWidth,l=n.dilationDepth,u=n.dilationHeight,s=n.dilationWidth,C=n.effectiveFilterDepth,d=n.effectiveFilterHeight,$=n.effectiveFilterWidth,h=n.padInfo.front,v=n.padInfo.top,f=n.padInfo.left;this.outputShape=n.outShape;const R=\"avg\"===e;let V=\"0.0\";if(R||(V=\"-1.0 / 1e-20\"),t){const e=\">=\";return void(this.userCode=`\\n        const ivec3 strides =\\n            ivec3(${x}, ${r}, ${c});\\n        const ivec3 pads = ivec3(${h}, ${v}, ${f});\\n\\n        void main() {\\n          ivec5 coords = getOutputCoords();\\n          int batch = coords.x;\\n          int ch = coords.u;\\n\\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n          int xDCorner = xCorner.x;\\n          int xRCorner = xCorner.y;\\n          int xCCorner = xCorner.z;\\n\\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n\\n          for (int wD = 0; wD < ${C};\\n              wD += ${l}) {\\n            int xD = xDCorner + wD;\\n\\n            if (xD < 0 || xD >= ${n.inDepth}) {\\n              continue;\\n            }\\n\\n            for (int wR = 0; wR < ${d};\\n                wR += ${u}) {\\n              int xR = xRCorner + wR;\\n\\n              if (xR < 0 || xR >= ${n.inHeight}) {\\n                continue;\\n              }\\n\\n              for (int wC = 0; wC < ${$};\\n                  wC += ${s}) {\\n                int xC = xCCorner + wC;\\n\\n                if (xC < 0 || xC >= ${n.inWidth}) {\\n                  continue;\\n                }\\n\\n                float value = getX(batch, xD, xR, xC, ch);\\n\\n                // If a min / max value has already been found, use it. If not,\\n                // use the current value.\\n                float currMinMaxValue = mix(\\n                    value, minMaxValue, minMaxValueFound);\\n                if (value ${e} currMinMaxValue) {\\n                  minMaxValue = value;\\n                  minMaxValueFound = 1.0;\\n                  minMaxPosition = ${i?a?`(((batch * ${n.inDepth} + xD) * ${n.inHeight} + xR) * ${n.inWidth} + xC) * ${n.inChannels} + ch`:`((xD * ${n.inHeight} + xR) * ${n.inWidth} + xC) * ${n.inChannels} + ch`:`wD * ${d} * ${$} +\\n                      wR * ${$} + wC`};\\n                }\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      `)}let g=`${e}(${e}(${e}(`+\"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])\";\"avg\"===e&&(g=\"avgValue / max(count, 1.0)\");const m=4*Math.floor(o/4),w=o%4,p=`\\n      if (${R}) {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = max(values, minMaxValue);\\n      }\\n    `;this.userCode=`\\n      const ivec3 strides =\\n        ivec3(${x}, ${r}, ${c});\\n      const ivec3 pads = ivec3(${h}, ${v}, ${f});\\n      const float initializationValue = ${V};\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float count = 0.0;\\n\\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\\n        if (xC < 0 || xC >= ${n.inWidth}) {\\n          return initializationValue;\\n        }\\n        count += 1.0;\\n        return getX(batch, xD, xR, xC, ch);\\n      }\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int ch = coords.u;\\n\\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n        int xDCorner = xCorner.x;\\n        int xRCorner = xCorner.y;\\n        int xCCorner = xCorner.z;\\n\\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(${V});\\n        float avgValue = 0.0;\\n        count = 0.0;\\n\\n        for (int wD = 0; wD < ${C};\\n            wD += ${l}) {\\n          int xD = xDCorner + wD;\\n\\n          if (xD < 0 || xD >= ${n.inDepth}) {\\n            continue;\\n          }\\n\\n          for (int wR = 0; wR < ${d};\\n            wR += ${u}) {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= ${n.inHeight}) {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < ${m}; wC += 4) {\\n              int xC = xCCorner + wC * ${s};\\n\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + ${s}, ch),\\n                getValue(batch, xD, xR, xC + 2 * ${s}, ch),\\n                getValue(batch, xD, xR, xC + 3 * ${s}, ch)\\n              );\\n\\n              ${p}\\n            }\\n\\n            int xC = xCCorner + ${m};\\n            if (${1===w}) {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                initializationValue,\\n                initializationValue,\\n                initializationValue\\n              );\\n\\n              ${p}\\n            } else if (${2===w}) {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + ${s}, ch),\\n                initializationValue,\\n                initializationValue\\n              );\\n\\n              ${p}\\n            } else if (${3===w}) {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + ${s}, ch),\\n                getValue(batch, xD, xR, xC + 2 * ${s}, ch),\\n                initializationValue\\n              );\\n\\n              ${p}\\n            }\\n          }\\n        }\\n        setOutput(${g});\\n      }\\n    `}}exports.Pool3DProgram=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":0}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":13}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":20}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":35}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":43}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":56}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":57}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":64}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":68}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":76}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":90}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":98}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":117}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":1,"column":119}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":1,"column":125}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":127}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":1,"column":139}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":27,"column":41},"generated":{"line":1,"column":141}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":1,"column":143}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":28,"column":33},"generated":{"line":1,"column":145}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":28,"column":52},"generated":{"line":1,"column":148}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":29,"column":6},"generated":{"line":1,"column":150}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":29,"column":28},"generated":{"line":1,"column":153}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":30,"column":8},"generated":{"line":1,"column":156}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":159}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":164}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":22,"column":18},"generated":{"line":1,"column":178}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":22,"column":19},"generated":{"line":1,"column":179}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":30,"column":21},"generated":{"line":1,"column":184}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":30,"column":8},"generated":{"line":1,"column":192}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":30,"column":30},"generated":{"line":1,"column":195}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":31,"column":12},"generated":{"line":1,"column":197}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":31,"column":12},"generated":{"line":1,"column":203}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":31,"column":16},"generated":{"line":1,"column":207}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":31,"column":22},"generated":{"line":1,"column":213}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":34,"column":10},"generated":{"line":1,"column":259}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":34,"column":10},"generated":{"line":1,"column":265}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":34,"column":24},"generated":{"line":1,"column":267}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":34,"column":33},"generated":{"line":1,"column":269}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":35,"column":10},"generated":{"line":1,"column":281}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":35,"column":25},"generated":{"line":1,"column":283}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":35,"column":34},"generated":{"line":1,"column":285}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":36,"column":10},"generated":{"line":1,"column":298}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":36,"column":24},"generated":{"line":1,"column":300}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":36,"column":33},"generated":{"line":1,"column":302}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":37,"column":10},"generated":{"line":1,"column":314}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":37,"column":27},"generated":{"line":1,"column":316}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":37,"column":36},"generated":{"line":1,"column":318}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":38,"column":10},"generated":{"line":1,"column":333}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":38,"column":26},"generated":{"line":1,"column":335}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":38,"column":35},"generated":{"line":1,"column":337}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":39,"column":10},"generated":{"line":1,"column":351}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":39,"column":34},"generated":{"line":1,"column":353}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":39,"column":43},"generated":{"line":1,"column":355}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":40,"column":10},"generated":{"line":1,"column":377}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":40,"column":33},"generated":{"line":1,"column":379}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":40,"column":42},"generated":{"line":1,"column":381}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":42,"column":10},"generated":{"line":1,"column":402}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":42,"column":19},"generated":{"line":1,"column":404}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":42,"column":28},"generated":{"line":1,"column":406}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":42,"column":36},"generated":{"line":1,"column":414}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":43,"column":10},"generated":{"line":1,"column":418}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":43,"column":20},"generated":{"line":1,"column":420}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":43,"column":29},"generated":{"line":1,"column":422}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":43,"column":37},"generated":{"line":1,"column":430}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":44,"column":9},"generated":{"line":1,"column":435}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":44,"column":9},"generated":{"line":1,"column":440}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":44,"column":23},"generated":{"line":1,"column":452}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":44,"column":32},"generated":{"line":1,"column":454}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":46,"column":10},"generated":{"line":1,"column":463}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":46,"column":10},"generated":{"line":1,"column":469}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":46,"column":35},"generated":{"line":1,"column":471}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":46,"column":22},"generated":{"line":1,"column":479}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":47,"column":10},"generated":{"line":1,"column":481}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":47,"column":50},"generated":{"line":1,"column":497}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":47,"column":59},"generated":{"line":1,"column":499}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":48,"column":8},"generated":{"line":1,"column":519}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":48,"column":17},"generated":{"line":1,"column":521}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":48,"column":36},"generated":{"line":1,"column":540}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":48,"column":45},"generated":{"line":1,"column":542}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":49,"column":10},"generated":{"line":1,"column":559}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":50,"column":17},"generated":{"line":1,"column":570}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":50,"column":26},"generated":{"line":1,"column":572}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":50,"column":45},"generated":{"line":1,"column":591}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":50,"column":54},"generated":{"line":1,"column":593}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":52,"column":8},"generated":{"line":1,"column":610}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":52,"column":8},"generated":{"line":1,"column":614}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":52,"column":30},"generated":{"line":1,"column":616}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":58,"column":8},"generated":{"line":1,"column":622}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":53,"column":9},"generated":{"line":1,"column":625}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":55,"column":6},"generated":{"line":1,"column":629}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":55,"column":28},"generated":{"line":1,"column":631}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":58,"column":8},"generated":{"line":1,"column":647}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":58,"column":26},"generated":{"line":1,"column":649}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":59,"column":12},"generated":{"line":1,"column":650}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":59,"column":12},"generated":{"line":1,"column":656}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":59,"column":24},"generated":{"line":1,"column":658}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":116,"column":6},"generated":{"line":1,"column":663}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":61,"column":11},"generated":{"line":1,"column":675}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":61,"column":11},"generated":{"line":1,"column":680}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":62,"column":38},"generated":{"line":1,"column":730}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":62,"column":55},"generated":{"line":1,"column":736}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":63,"column":35},"generated":{"line":1,"column":777}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":63,"column":46},"generated":{"line":1,"column":783}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":81,"column":34},"generated":{"line":1,"column":1332}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":82,"column":22},"generated":{"line":1,"column":1359}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":85,"column":34},"generated":{"line":1,"column":1439}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":85,"column":43},"generated":{"line":1,"column":1441}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":89,"column":36},"generated":{"line":1,"column":1533}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":90,"column":24},"generated":{"line":1,"column":1562}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":93,"column":36},"generated":{"line":1,"column":1646}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":93,"column":45},"generated":{"line":1,"column":1648}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":103,"column":26},"generated":{"line":1,"column":2010}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":107,"column":10},"generated":{"line":1,"column":2147}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":107,"column":30},"generated":{"line":1,"column":2149}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":107,"column":52},"generated":{"line":1,"column":2151}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":108,"column":52},"generated":{"line":1,"column":2153}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":109,"column":37},"generated":{"line":1,"column":2163}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":121,"column":8},"generated":{"line":1,"column":2285}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":121,"column":8},"generated":{"line":1,"column":2289}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":121,"column":25},"generated":{"line":1,"column":2294}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":121,"column":37},"generated":{"line":1,"column":2299}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":121,"column":49},"generated":{"line":1,"column":2304}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":122,"column":8},"generated":{"line":1,"column":2309}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":123,"column":21},"generated":{"line":1,"column":2377}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":123,"column":8},"generated":{"line":1,"column":2385}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":124,"column":6},"generated":{"line":1,"column":2389}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":124,"column":20},"generated":{"line":1,"column":2391}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":127,"column":10},"generated":{"line":1,"column":2421}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":127,"column":10},"generated":{"line":1,"column":2427}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":127,"column":65},"generated":{"line":1,"column":2429}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":127,"column":35},"generated":{"line":1,"column":2431}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":127,"column":40},"generated":{"line":1,"column":2436}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":127,"column":46},"generated":{"line":1,"column":2442}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":127,"column":60},"generated":{"line":1,"column":2444}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":128,"column":10},"generated":{"line":1,"column":2447}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":128,"column":37},"generated":{"line":1,"column":2449}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":128,"column":51},"generated":{"line":1,"column":2451}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":130,"column":10},"generated":{"line":1,"column":2453}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":131,"column":12},"generated":{"line":1,"column":2470}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":138,"column":9},"generated":{"line":1,"column":2597}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":138,"column":9},"generated":{"line":1,"column":2602}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":139,"column":36},"generated":{"line":1,"column":2650}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":139,"column":53},"generated":{"line":1,"column":2656}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":140,"column":33},"generated":{"line":1,"column":2695}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":140,"column":44},"generated":{"line":1,"column":2701}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":141,"column":42},"generated":{"line":1,"column":2749}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":147,"column":30},"generated":{"line":1,"column":2923}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":147,"column":39},"generated":{"line":1,"column":2925}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":165,"column":34},"generated":{"line":1,"column":3438}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":169,"column":32},"generated":{"line":1,"column":3531}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":170,"column":20},"generated":{"line":1,"column":3556}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":173,"column":32},"generated":{"line":1,"column":3632}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":173,"column":41},"generated":{"line":1,"column":3634}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":177,"column":34},"generated":{"line":1,"column":3720}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":178,"column":39},"generated":{"line":1,"column":3775}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":182,"column":41},"generated":{"line":1,"column":3899}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":183,"column":45},"generated":{"line":1,"column":3953}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":184,"column":45},"generated":{"line":1,"column":4007}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":187,"column":14},"generated":{"line":1,"column":4047}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":190,"column":32},"generated":{"line":1,"column":4098}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":191,"column":45},"generated":{"line":1,"column":4119}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":191,"column":16},"generated":{"line":1,"column":4123}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":199,"column":14},"generated":{"line":1,"column":4345}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":200,"column":52},"generated":{"line":1,"column":4372}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":200,"column":23},"generated":{"line":1,"column":4376}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":203,"column":41},"generated":{"line":1,"column":4500}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":208,"column":14},"generated":{"line":1,"column":4612}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":209,"column":52},"generated":{"line":1,"column":4639}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":209,"column":23},"generated":{"line":1,"column":4643}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":212,"column":41},"generated":{"line":1,"column":4767}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":213,"column":45},"generated":{"line":1,"column":4821}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":217,"column":14},"generated":{"line":1,"column":4897}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":220,"column":20},"generated":{"line":1,"column":4945}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":4967}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":4975}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":4989}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":6},"generated":{"line":1,"column":4991}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":13},"generated":{"line":1,"column":4997}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":231,"column":2},"generated":{"line":1,"column":4999}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":232,"column":6},"generated":{"line":1,"column":5011}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":232,"column":41},"generated":{"line":1,"column":5013}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":233,"column":6},"generated":{"line":1,"column":5015}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":233,"column":33},"generated":{"line":1,"column":5017}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":233,"column":52},"generated":{"line":1,"column":5020}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":234,"column":6},"generated":{"line":1,"column":5022}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":234,"column":28},"generated":{"line":1,"column":5025}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":235,"column":8},"generated":{"line":1,"column":5028}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":227,"column":2},"generated":{"line":1,"column":5031}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":227,"column":2},"generated":{"line":1,"column":5036}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":227,"column":18},"generated":{"line":1,"column":5050}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":227,"column":19},"generated":{"line":1,"column":5051}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":235,"column":21},"generated":{"line":1,"column":5056}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":235,"column":8},"generated":{"line":1,"column":5064}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":235,"column":30},"generated":{"line":1,"column":5067}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":236,"column":12},"generated":{"line":1,"column":5069}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":236,"column":12},"generated":{"line":1,"column":5075}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":236,"column":16},"generated":{"line":1,"column":5079}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":236,"column":22},"generated":{"line":1,"column":5085}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":239,"column":10},"generated":{"line":1,"column":5131}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":239,"column":10},"generated":{"line":1,"column":5137}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":239,"column":24},"generated":{"line":1,"column":5139}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":239,"column":33},"generated":{"line":1,"column":5141}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":240,"column":10},"generated":{"line":1,"column":5153}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":240,"column":24},"generated":{"line":1,"column":5155}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":240,"column":33},"generated":{"line":1,"column":5157}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":241,"column":10},"generated":{"line":1,"column":5169}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":241,"column":25},"generated":{"line":1,"column":5171}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":241,"column":34},"generated":{"line":1,"column":5173}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":242,"column":10},"generated":{"line":1,"column":5186}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":242,"column":24},"generated":{"line":1,"column":5188}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":242,"column":33},"generated":{"line":1,"column":5190}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":243,"column":10},"generated":{"line":1,"column":5202}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":243,"column":26},"generated":{"line":1,"column":5204}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":243,"column":35},"generated":{"line":1,"column":5206}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":244,"column":10},"generated":{"line":1,"column":5220}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":244,"column":27},"generated":{"line":1,"column":5222}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":244,"column":36},"generated":{"line":1,"column":5224}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":245,"column":10},"generated":{"line":1,"column":5239}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":245,"column":26},"generated":{"line":1,"column":5241}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":245,"column":35},"generated":{"line":1,"column":5243}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":246,"column":10},"generated":{"line":1,"column":5257}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":246,"column":33},"generated":{"line":1,"column":5259}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":246,"column":42},"generated":{"line":1,"column":5261}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":247,"column":10},"generated":{"line":1,"column":5282}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":247,"column":34},"generated":{"line":1,"column":5284}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":247,"column":43},"generated":{"line":1,"column":5286}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":248,"column":10},"generated":{"line":1,"column":5308}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":248,"column":33},"generated":{"line":1,"column":5310}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":248,"column":42},"generated":{"line":1,"column":5312}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":250,"column":10},"generated":{"line":1,"column":5333}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":250,"column":21},"generated":{"line":1,"column":5335}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":250,"column":30},"generated":{"line":1,"column":5337}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":250,"column":38},"generated":{"line":1,"column":5345}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":251,"column":10},"generated":{"line":1,"column":5351}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":251,"column":19},"generated":{"line":1,"column":5353}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":251,"column":28},"generated":{"line":1,"column":5355}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":251,"column":36},"generated":{"line":1,"column":5363}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":252,"column":10},"generated":{"line":1,"column":5367}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":252,"column":20},"generated":{"line":1,"column":5369}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":252,"column":29},"generated":{"line":1,"column":5371}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":252,"column":37},"generated":{"line":1,"column":5379}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":253,"column":9},"generated":{"line":1,"column":5384}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":253,"column":9},"generated":{"line":1,"column":5389}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":253,"column":23},"generated":{"line":1,"column":5401}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":253,"column":32},"generated":{"line":1,"column":5403}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":255,"column":10},"generated":{"line":1,"column":5412}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":255,"column":10},"generated":{"line":1,"column":5418}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":255,"column":35},"generated":{"line":1,"column":5420}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":255,"column":22},"generated":{"line":1,"column":5428}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":257,"column":8},"generated":{"line":1,"column":5430}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":257,"column":8},"generated":{"line":1,"column":5434}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":257,"column":30},"generated":{"line":1,"column":5436}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":263,"column":8},"generated":{"line":1,"column":5442}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":258,"column":9},"generated":{"line":1,"column":5445}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":260,"column":6},"generated":{"line":1,"column":5449}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":260,"column":28},"generated":{"line":1,"column":5451}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":263,"column":8},"generated":{"line":1,"column":5467}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":263,"column":26},"generated":{"line":1,"column":5469}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":264,"column":12},"generated":{"line":1,"column":5470}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":264,"column":12},"generated":{"line":1,"column":5476}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":264,"column":24},"generated":{"line":1,"column":5478}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":337,"column":6},"generated":{"line":1,"column":5483}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":266,"column":11},"generated":{"line":1,"column":5495}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":266,"column":11},"generated":{"line":1,"column":5500}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":268,"column":20},"generated":{"line":1,"column":5563}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":268,"column":36},"generated":{"line":1,"column":5569}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":268,"column":53},"generated":{"line":1,"column":5575}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":269,"column":35},"generated":{"line":1,"column":5616}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":269,"column":48},"generated":{"line":1,"column":5622}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":269,"column":59},"generated":{"line":1,"column":5628}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":287,"column":34},"generated":{"line":1,"column":6209}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":288,"column":22},"generated":{"line":1,"column":6236}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":291,"column":34},"generated":{"line":1,"column":6316}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":291,"column":43},"generated":{"line":1,"column":6318}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":295,"column":36},"generated":{"line":1,"column":6409}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":296,"column":24},"generated":{"line":1,"column":6438}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":299,"column":36},"generated":{"line":1,"column":6522}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":299,"column":45},"generated":{"line":1,"column":6524}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":303,"column":38},"generated":{"line":1,"column":6622}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":304,"column":26},"generated":{"line":1,"column":6653}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":307,"column":38},"generated":{"line":1,"column":6741}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":307,"column":47},"generated":{"line":1,"column":6743}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":317,"column":28},"generated":{"line":1,"column":7126}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":321,"column":10},"generated":{"line":1,"column":7269}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":322,"column":15},"generated":{"line":1,"column":7271}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":323,"column":33},"generated":{"line":1,"column":7287}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":323,"column":42},"generated":{"line":1,"column":7289}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":324,"column":23},"generated":{"line":1,"column":7308}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":324,"column":32},"generated":{"line":1,"column":7310}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":324,"column":52},"generated":{"line":1,"column":7330}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":324,"column":61},"generated":{"line":1,"column":7332}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":325,"column":23},"generated":{"line":1,"column":7351}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":325,"column":32},"generated":{"line":1,"column":7353}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":326,"column":29},"generated":{"line":1,"column":7381}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":326,"column":38},"generated":{"line":1,"column":7383}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":327,"column":23},"generated":{"line":1,"column":7403}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":327,"column":32},"generated":{"line":1,"column":7405}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":327,"column":51},"generated":{"line":1,"column":7424}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":327,"column":60},"generated":{"line":1,"column":7426}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":328,"column":22},"generated":{"line":1,"column":7452}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":328,"column":49},"generated":{"line":1,"column":7459}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":329,"column":29},"generated":{"line":1,"column":7494}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":342,"column":8},"generated":{"line":1,"column":7635}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":342,"column":8},"generated":{"line":1,"column":7639}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":342,"column":25},"generated":{"line":1,"column":7644}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":342,"column":37},"generated":{"line":1,"column":7649}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":342,"column":49},"generated":{"line":1,"column":7654}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":343,"column":8},"generated":{"line":1,"column":7659}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":344,"column":21},"generated":{"line":1,"column":7727}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":344,"column":8},"generated":{"line":1,"column":7735}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":348,"column":6},"generated":{"line":1,"column":7739}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":348,"column":20},"generated":{"line":1,"column":7741}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":351,"column":10},"generated":{"line":1,"column":7771}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":351,"column":10},"generated":{"line":1,"column":7777}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":351,"column":65},"generated":{"line":1,"column":7779}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":351,"column":35},"generated":{"line":1,"column":7781}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":351,"column":40},"generated":{"line":1,"column":7786}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":351,"column":46},"generated":{"line":1,"column":7792}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":351,"column":60},"generated":{"line":1,"column":7794}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":352,"column":10},"generated":{"line":1,"column":7797}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":352,"column":37},"generated":{"line":1,"column":7799}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":352,"column":51},"generated":{"line":1,"column":7801}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":354,"column":10},"generated":{"line":1,"column":7803}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":355,"column":12},"generated":{"line":1,"column":7820}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":362,"column":9},"generated":{"line":1,"column":7947}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":362,"column":9},"generated":{"line":1,"column":7952}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":364,"column":16},"generated":{"line":1,"column":8009}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":364,"column":32},"generated":{"line":1,"column":8015}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":364,"column":49},"generated":{"line":1,"column":8021}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":365,"column":33},"generated":{"line":1,"column":8060}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":365,"column":46},"generated":{"line":1,"column":8066}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":365,"column":57},"generated":{"line":1,"column":8072}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":366,"column":42},"generated":{"line":1,"column":8120}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":372,"column":30},"generated":{"line":1,"column":8303}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":372,"column":39},"generated":{"line":1,"column":8305}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":391,"column":34},"generated":{"line":1,"column":8885}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":395,"column":32},"generated":{"line":1,"column":8978}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":396,"column":20},"generated":{"line":1,"column":9003}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":399,"column":32},"generated":{"line":1,"column":9079}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":399,"column":41},"generated":{"line":1,"column":9081}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":403,"column":34},"generated":{"line":1,"column":9166}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":404,"column":20},"generated":{"line":1,"column":9191}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":407,"column":34},"generated":{"line":1,"column":9271}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":407,"column":43},"generated":{"line":1,"column":9273}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":411,"column":36},"generated":{"line":1,"column":9365}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":412,"column":41},"generated":{"line":1,"column":9422}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":416,"column":47},"generated":{"line":1,"column":9561}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":417,"column":51},"generated":{"line":1,"column":9622}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":418,"column":51},"generated":{"line":1,"column":9683}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":421,"column":16},"generated":{"line":1,"column":9728}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":424,"column":34},"generated":{"line":1,"column":9783}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":425,"column":47},"generated":{"line":1,"column":9806}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":425,"column":18},"generated":{"line":1,"column":9810}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":433,"column":16},"generated":{"line":1,"column":10051}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":434,"column":54},"generated":{"line":1,"column":10080}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":434,"column":25},"generated":{"line":1,"column":10084}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":437,"column":47},"generated":{"line":1,"column":10223}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":442,"column":16},"generated":{"line":1,"column":10344}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":443,"column":54},"generated":{"line":1,"column":10373}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":443,"column":25},"generated":{"line":1,"column":10377}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":446,"column":47},"generated":{"line":1,"column":10516}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":447,"column":51},"generated":{"line":1,"column":10577}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":451,"column":16},"generated":{"line":1,"column":10660}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":455,"column":20},"generated":{"line":1,"column":10723}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":10745}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":10753}},{"source":"../../../../../tfjs-backend-webgl/src/pool_gpu.ts","name":null,"original":{"line":226,"column":26},"generated":{"line":1,"column":10767}}],"sources":{"../../../../../tfjs-backend-webgl/src/pool_gpu.ts":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util} from '@tensorflow/tfjs-core';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class Pool2DProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      convInfo: backend_util.Conv2DInfo, poolType: 'max'|'avg',\n      computePositions: boolean, flattenPositions = false,\n      includeBatchInIndex = false) {\n    if (poolType === 'avg' && computePositions) {\n      throw new Error('Cannot compute positions for average pool.');\n    }\n\n    const filterWidth = convInfo.filterWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    this.outputShape = convInfo.outShape;\n\n    const isAvgPool = poolType === 'avg';\n    const batchFlattenPositionStr = `((batch  * ${convInfo.inHeight} + xR) * ${\n        convInfo.inWidth} + xC) * ${convInfo.inChannels} + d`;\n    const flattenPositionStr =\n        `(xR * ${convInfo.inWidth} + xC) * ${convInfo.inChannels} + d`;\n\n    let initializationValue = '0.0';\n    if (!isAvgPool) {\n      // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n      initializationValue = '-1.0 / 1e-20';\n    }\n\n    if (computePositions) {\n      const compareOp = '>=';\n\n      this.userCode = `\n        const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n        const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${effectiveFilterHeight};\n              wR += ${dilationHeight}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${effectiveFilterWidth};\n                wC += ${dilationWidth}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${compareOp} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${\n          flattenPositions ? (includeBatchInIndex ? batchFlattenPositionStr :\n                                                    flattenPositionStr) :\n                             `wR * ${effectiveFilterWidth} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `;\n      return;\n    }\n\n    const compareOp = 'max';\n\n    let returnValue = `${poolType}(${poolType}(${poolType}(` +\n        'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n    if (poolType === 'avg') {\n      returnValue = `avgValue / max(count, 1.0)`;\n    }\n\n    const filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n    const filterWidthVec4Remainder = filterWidth % 4;\n\n    const updateSnippet = `\n      if (${isAvgPool}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${compareOp}(values, minMaxValue);\n      }\n    `;\n\n    this.userCode = `\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n      const float initializationValue = ${initializationValue};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${convInfo.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${initializationValue});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${effectiveFilterHeight};\n            wR += ${dilationHeight}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${convInfo.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${filterWidthNearestVec4}; wC += 4) {\n            int xC = xCCorner + wC * ${dilationWidth};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              getValue(batch, xR, xC + 2 * ${dilationWidth}, d),\n              getValue(batch, xR, xC + 3 * ${dilationWidth}, d)\n            );\n\n            ${updateSnippet}\n          }\n\n          int xC = xCCorner + ${filterWidthNearestVec4};\n          if (${filterWidthVec4Remainder === 1}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${updateSnippet}\n          } else if (${filterWidthVec4Remainder === 2}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${updateSnippet}\n          } else if (${filterWidthVec4Remainder === 3}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              getValue(batch, xR, xC + 2 * ${dilationWidth}, d),\n              initializationValue\n            );\n\n            ${updateSnippet}\n          }\n        }\n        setOutput(${returnValue});\n      }\n    `;\n  }\n}\n\nexport class Pool3DProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      convInfo: backend_util.Conv3DInfo, poolType: 'max'|'avg',\n      computePositions: boolean, flattenPositions = false,\n      includeBatchInIndex = false) {\n    if (poolType === 'avg' && computePositions) {\n      throw new Error('Cannot compute positions for average pool.');\n    }\n\n    const filterWidth = convInfo.filterWidth;\n    const strideDepth = convInfo.strideDepth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationDepth = convInfo.dilationDepth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterDepth = convInfo.effectiveFilterDepth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n\n    const padFront = convInfo.padInfo.front;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    this.outputShape = convInfo.outShape;\n\n    const isAvgPool = poolType === 'avg';\n\n    let initializationValue = '0.0';\n    if (!isAvgPool) {\n      // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n      initializationValue = '-1.0 / 1e-20';\n    }\n\n    if (computePositions) {\n      const compareOp = '>=';\n\n      this.userCode = `\n        const ivec3 strides =\n            ivec3(${strideDepth}, ${strideHeight}, ${strideWidth});\n        const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${effectiveFilterDepth};\n              wD += ${dilationDepth}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${convInfo.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${effectiveFilterHeight};\n                wR += ${dilationHeight}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${convInfo.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${effectiveFilterWidth};\n                  wC += ${dilationWidth}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${compareOp} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${\n          flattenPositions ?\n              (includeBatchInIndex ?\n                   `(((batch * ${convInfo.inDepth} + xD) * ${\n                       convInfo.inHeight} + xR) * ${convInfo.inWidth} + xC) * ${\n                       convInfo.inChannels} + ch` :\n                   `((xD * ${convInfo.inHeight} + xR) * ${\n                       convInfo.inWidth} + xC) * ${convInfo.inChannels} + ch`) :\n              `wD * ${effectiveFilterHeight} * ${effectiveFilterWidth} +\n                      wR * ${effectiveFilterWidth} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `;\n      return;\n    }\n\n    const compareOp = 'max';\n\n    let returnValue = `${poolType}(${poolType}(${poolType}(` +\n        'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n    if (poolType === 'avg') {\n      // Use `max(count, 1.0)` instead of `count` in case count === 0.0.\n      // If count === 0.0, `avgValue` is always 0.0 and we change `count`'s\n      // value to avoid dividing zero.\n      returnValue = `avgValue / max(count, 1.0)`;\n    }\n\n    const filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n    const filterWidthVec4Remainder = filterWidth % 4;\n\n    const updateSnippet = `\n      if (${isAvgPool}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${compareOp}(values, minMaxValue);\n      }\n    `;\n\n    this.userCode = `\n      const ivec3 strides =\n        ivec3(${strideDepth}, ${strideHeight}, ${strideWidth});\n      const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n      const float initializationValue = ${initializationValue};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${convInfo.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${initializationValue});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${effectiveFilterDepth};\n            wD += ${dilationDepth}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${convInfo.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${effectiveFilterHeight};\n            wR += ${dilationHeight}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${filterWidthNearestVec4}; wC += 4) {\n              int xC = xCCorner + wC * ${dilationWidth};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${dilationWidth}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${dilationWidth}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${dilationWidth}, ch)\n              );\n\n              ${updateSnippet}\n            }\n\n            int xC = xCCorner + ${filterWidthNearestVec4};\n            if (${filterWidthVec4Remainder === 1}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${updateSnippet}\n            } else if (${filterWidthVec4Remainder === 2}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${dilationWidth}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${updateSnippet}\n            } else if (${filterWidthVec4Remainder === 3}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${dilationWidth}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${dilationWidth}, ch),\n                initializationValue\n              );\n\n              ${updateSnippet}\n            }\n          }\n        }\n        setOutput(${returnValue});\n      }\n    `;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"b59629cd96fc7ca50f5b3d63386a992e","cacheData":{"env":{}}}