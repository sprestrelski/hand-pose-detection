{"id":"eu7U","dependencies":[{"name":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\package.json","includedInParent":true,"mtime":1681608596899},{"name":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\.babelrc","includedInParent":true,"mtime":1681607266813},{"name":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1681608478311},{"name":"./search_sorted","loc":{"line":17,"column":29},"parent":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\upper_bound.js","resolved":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\search_sorted.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.upperBound=r;var e=require(\"./search_sorted\");function r(r,t){return(0,e.searchSorted)(r,t,\"right\")}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":1,"column":87}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":89}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":93}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":95}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":103}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":56,"column":6},"generated":{"line":1,"column":122}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":56,"column":16},"generated":{"line":1,"column":131}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":57,"column":4},"generated":{"line":1,"column":133}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":57,"column":39},"generated":{"line":1,"column":135}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":58,"column":9},"generated":{"line":1,"column":138}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":58,"column":9},"generated":{"line":1,"column":145}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":58,"column":22},"generated":{"line":1,"column":147}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":58,"column":22},"generated":{"line":1,"column":149}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":58,"column":22},"generated":{"line":1,"column":163}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":58,"column":38},"generated":{"line":1,"column":165}},{"source":"../../../../../../tfjs-core/src/ops/upper_bound.ts","name":null,"original":{"line":58,"column":46},"generated":{"line":1,"column":167}}],"sources":{"../../../../../../tfjs-core/src/ops/upper_bound.ts":"/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {TensorLike} from '../types';\nimport {searchSorted} from './search_sorted';\n\n/**\n * Searches for where a value would go in a sorted sequence.\n *\n * This is not a method for checking containment (like javascript in).\n *\n * The typical use case for this operation is \"binning\", \"bucketing\", or\n * \"discretizing\". The values are assigned to bucket-indices based on the edges\n * listed in 'sortedSequence'. This operation returns the bucket-index for each\n * value.\n *\n * The index returned corresponds to the first edge greater than the value.\n *\n * The axis is not settable for this operation. It always operates on the\n * innermost dimension (axis=-1). The operation will accept any number of outer\n * dimensions.\n *\n * Note: This operation assumes that 'upperBound' is sorted along the\n * innermost axis, maybe using 'sort(..., axis=-1)'. If the sequence is not\n * sorted no error is raised and the content of the returned tensor is not well\n * defined.\n *\n * ```js\n * const seq = tf.tensor1d([0, 3, 9, 10, 10]);\n * const values = tf.tensor1d([0, 4, 10]);\n * const result = tf.upperBound(seq, values);\n * result.print(); // [1, 2, 5]\n * ```\n * @param sortedSequence: N-D. Sorted sequence.\n * @param values: N-D. Search values.\n * @return An N-D int32 tensor the size of values containing the result of\n *     applying upper bound to each value. The result is not a global index to\n *     the entire Tensor, but the index in the last dimension.\n * @doc {heading: 'Operations', subheading: 'Evaluation'}\n */\nexport function upperBound(\n    sortedSequence: Tensor|TensorLike, values: Tensor|TensorLike): Tensor {\n  return searchSorted(sortedSequence, values, 'right');\n}\n"},"lineCount":null}},"error":null,"hash":"f2973b1fb0afa373cec841c5d9f95581","cacheData":{"env":{}}}