{"id":"izP8","dependencies":[{"name":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-backend-wasm\\dist\\kernels\\Cast.js.map","includedInParent":true,"mtime":1681608070644},{"name":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\package.json","includedInParent":true,"mtime":1681608596899},{"name":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\.babelrc","includedInParent":true,"mtime":1681607266813},{"name":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-backend-wasm\\package.json","includedInParent":true,"mtime":1681608070644},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":21},"parent":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-backend-wasm\\dist\\kernels\\Cast.js","resolved":"C:\\Users\\saman\\OneDrive\\Documents\\GitHub\\hand-pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.cast=t,exports.castConfig=void 0;var e=require(\"@tensorflow/tfjs-core\");function t(e){const{inputs:{x:t},attrs:{dtype:r},backend:s}=e,a=s.makeOutput(t.shape,r),o=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(a).set(o),a}const r={kernelName:e.Cast,backendName:\"wasm\",kernelFunc:t};exports.castConfig=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":0}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":13}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":20}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":35}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":43}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":56}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":57}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":64}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":68}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":76}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":81}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":83}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":91}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":107}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":109}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":113}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":115}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":123}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":23,"column":6},"generated":{"line":1,"column":148}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":23,"column":16},"generated":{"line":1,"column":157}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":1,"column":159}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":1,"column":162}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":26,"column":9},"generated":{"line":1,"column":168}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":26,"column":17},"generated":{"line":1,"column":176}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":26,"column":18},"generated":{"line":1,"column":178}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":26,"column":22},"generated":{"line":1,"column":181}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":26,"column":29},"generated":{"line":1,"column":188}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":26,"column":30},"generated":{"line":1,"column":194}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":1,"column":197}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":26,"column":38},"generated":{"line":1,"column":205}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":26,"column":49},"generated":{"line":1,"column":208}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":27,"column":8},"generated":{"line":1,"column":210}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":27,"column":14},"generated":{"line":1,"column":212}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":27,"column":22},"generated":{"line":1,"column":214}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":27,"column":33},"generated":{"line":1,"column":225}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":27,"column":35},"generated":{"line":1,"column":227}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":27,"column":42},"generated":{"line":1,"column":233}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":28,"column":8},"generated":{"line":1,"column":236}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":28,"column":17},"generated":{"line":1,"column":238}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":28,"column":25},"generated":{"line":1,"column":240}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":28,"column":44},"generated":{"line":1,"column":259}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":31,"column":9},"generated":{"line":1,"column":262}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":29,"column":18},"generated":{"line":1,"column":269}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":29,"column":26},"generated":{"line":1,"column":271}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":29,"column":45},"generated":{"line":1,"column":290}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":30,"column":10},"generated":{"line":1,"column":293}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":30,"column":14},"generated":{"line":1,"column":297}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":31,"column":9},"generated":{"line":1,"column":300}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":302}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":13},"generated":{"line":1,"column":308}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":40},"generated":{"line":1,"column":310}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":35,"column":2},"generated":{"line":1,"column":311}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":35,"column":14},"generated":{"line":1,"column":322}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":40},"generated":{"line":1,"column":324}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":1,"column":329}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":36,"column":15},"generated":{"line":1,"column":341}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":1,"column":348}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":37,"column":14},"generated":{"line":1,"column":359}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":362}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":370}},{"source":"../../src/kernels/Cast.ts","name":null,"original":{"line":34,"column":7},"generated":{"line":1,"column":381}}],"sources":{"../../src/kernels/Cast.ts":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Cast, CastAttrs, CastInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\nimport {TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {BackendWasm} from '../backend_wasm';\n\nexport function cast(\n    args: {inputs: CastInputs, attrs: CastAttrs, backend: BackendWasm}):\n    TensorInfo {\n  const {inputs: {x}, attrs: {dtype}, backend} = args;\n  const out = backend.makeOutput(x.shape, dtype);\n  const inVals = backend.typedArrayFromHeap(x);\n  const outVals = backend.typedArrayFromHeap(out);\n  outVals.set(inVals);\n  return out;\n}\n\nexport const castConfig: KernelConfig = {\n  kernelName: Cast,\n  backendName: 'wasm',\n  kernelFunc: cast as {} as KernelFunc,\n};\n"},"lineCount":null}},"error":null,"hash":"0f5daf955c79ed04dafdabd0f0e19687","cacheData":{"env":{}}}